---
title: Launching an Ops Manager Director Instance with an ARM Template
owner: Ops Manager
---

<strong><%= modified_date %></strong>

This topic describes how to deploy Ops Manager Director for Pivotal Cloud Foundry (PCF) on Azure using an Azure Resource Manager (ARM) template. An ARM template is a JSON file that describes one or more resources to deploy to a resource group.

You can also deploy Ops Manager Director manually. For more information, see the [Launching an Ops Manager Director Instance on Azure without an ARM Template](azure-om-deploy.html) topic.

Before you perform the procedures in this topic, you must complete the procedures in the [Preparing to Deploy PCF on Azure](azure-prepare-env.html) topic. After you complete the procedures in this topic, follow the instructions in [Configuring Ops Manager Director on Azure](azure-om-config.html).


## <a id='storage'></a> Step 1: Create BOSH Storage Account

Azure for PCF uses multiple general-purpose Azure storage accounts. The BOSH and Ops Manager VMs use one main BOSH storage account, and the other components share five or more deployment storage accounts.

1. Choose a name for your resource group and export it as an environment variable `$RESOURCE_GROUP`.
    <pre class="terminal">
    $ export RESOURCE_GROUP="YOUR-RESOURCE-GROUP-NAME"
    </pre>
    <p class="note"><strong>Note:</strong> If you are on a Windows machine, you can use <code>set</code> instead of <code>export</code>.</p>

1. Export your location. For example, `westus`.
    <pre class="terminal">
    $ export LOCATION="YOUR-LOCATION"
    </pre>
    <p class="note"><strong>Note:</strong> For a list of available locations, run <code>az account list-locations</code>.</p>

1. Create your resource group:
    <pre class="terminal">$ az group create --name $RESOURCE_GROUP --location $LOCATION
    </pre>

1. Choose a name for your BOSH storage account, and export it as the environment variable `$STORAGE_NAME`. Storage account names must be globally unique across Azure, between 3 and 24 characters in length, and contain only lowercase letters and numbers.
    <pre class="terminal">
    $ export STORAGE_NAME="YOUR-BOSH-STORAGE-ACCOUNT-NAME"
    </pre>

1. Create the storage account.
    <pre class="terminal">
    $ az storage account create --name $STORAGE\_NAME \
    --resource-group $RESOURCE\_GROUP --sku Standard\_LRS \
    --kind Storage --location $LOCATION
    </pre>
    <p class="note"><strong>Note:</strong> <code>Standard_LRS</code> refers to a Standard Azure storage account. The BOSH Director requires table storage to store stemcell information. Azure Premium storage does not support table storage and cannot be used for the BOSH storage account.</p>

1. Retrieve the connection string for your BOSH storage account:
  <pre class="terminal">
    $ az storage account show-connection-string \
    --name $STORAGE\_NAME --resource-group $RESOURCE_GROUP
    </pre>
    The command returns output similar to the following:
    <pre class="terminal">
    {
      "connectionString": "DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=cfdocsdeploystorage1;AccountKey=EXAMPLE0000OocsGhKBwn/Mf8wEwdeJMvvonrbmNk27bfkSL8ZFzAhs3Kb78si5CTPHhjHHiK4qPcYzn/8OmFg=="
    }
  </pre>

1. Record the full value of `connectionString` from the output above, starting with and including `DefaultEndpointsProtocol=`.

1. Export the connection string:
    <pre class="terminal">$ export CONNECTION_STRING="YOUR-CONNECTION-STRING"</pre>

1. Create a container for the Ops Manager image:
    <pre class="terminal">$ az storage container create --name opsman-image \
    --connection-string $CONNECTION_STRING</pre>

1. Create a container for the Ops Manager VM:
    <pre class="terminal">$ az storage container create --name vhds \
    --connection-string $CONNECTION_STRING</pre>

1. Create a container for Ops Manager:
    <pre class="terminal">$ az storage container create --name opsmanager \
    --connection-string $CONNECTION_STRING</pre>

1. Create a container for BOSH:
    <pre class="terminal">$ az storage container create --name bosh \
    --connection-string $CONNECTION_STRING</pre>

1. Create a container for the stemcell:
    <pre class="terminal">$ az storage container create --name stemcell \
    --public-access blob \
    --connection-string $CONNECTION_STRING</pre>
    </pre>

1. Create a table for stemcell data:
    <pre class="terminal">$ az storage table create --name stemcells \
    --connection-string $CONNECTION_STRING</pre>


## <a id='copy'></a> Step 2: Copy Ops Manager Image

1. Navigate to [Pivotal Network](https://network.pivotal.io/products/ops-manager) and download the latest release of **Pivotal Cloud Foundry Ops Manager for Azure**. You can download either a PDF or a YAML file.

1. View the downloaded file and locate the Ops Manager image URL appropriate for your region.

1. Export the Ops Manager image URL as an environment variable.
    <pre class="terminal">$ export OPS\_MAN\_IMAGE\_URL="YOUR-OPS-MAN-IMAGE-URL"</pre>

1. Copy the Ops Manager image into your storage account:
    <pre class="terminal">
    $ az storage blob copy start --source-uri $OPS\_MAN\_IMAGE\_URL \
    --connection-string $CONNECTION_STRING \
    --destination-container opsman-image \
    --destination-blob image.vhd
    </pre>

1. Copying the image may take several minutes. Run the following command and examine the output under `"copy"`:
    <pre class="terminal">
    $ az storage blob show --name image.vhd \
    --container-name opsman-image \
    --account-name $STORAGE_NAME
    ...
    "copy": {
      "completionTime": "2017-06-26T22:24:11+00:00",
      "id": "b9c8b272-a562-4574-baa6-f1a04afcefdf",
      "progress": "53687091712/53687091712",
      "source": "http<span>s:/</span>/opsmanagerwestus.blob.core.windows.net/images/ops-manager-1.11.3.vhd",
      "status": "success",
      "statusDescription": null
    },
    </pre>
    When `status` reads `success`, continue to the next step.


## <a id='configure'></a> Step 3: Configure the ARM Template

1. Create a keypair on your local machine. For example, enter the following command:
   <pre class="terminal">
   $ ssh-keygen -t rsa -f opsman
   </pre>
   <br>
   When prompted for a passphrase, follow the prompts to create an empty passphrase.

1. Clone the PCF Azure ARM Templates GitHub [repository](https://github.com/pivotal-cf/pcf-azure-arm-templates.git). This repository contains both the ARM template, `azure-deploy.json`, and the parameters file, `azure-deploy-parameters.json`.

1. Open the parameters file and enter values for the following parameters:
    * **storageAccountName**: The name of the storage account you created in [Step 1: Create Storage Account](#storage)
    * **storageEndpoint**: The name of the storage endpoint. Leave the default endpoint unless you are using Azure China, Azure Government Cloud, or Azure Germany:
        * For Azure China, use `blob.core.chinacloudapi.cn`. See the [Azure documentation](https://docs.microsoft.com/en-us/azure/china/china-get-started-developer-guide) for more information.
        * For Azure Government Cloud, use `blob.core.usgovcloudapi.net`. See the [Azure documentation](https://docs.microsoft.com/en-us/azure/azure-government/documentation-government-services-storage) for more information.
        * For Azure Germany, use `blob.core.cloudapi.de`. See the [Azure documentation](https://docs.microsoft.com/en-us/azure/germany/germany-developer-guide) for more information.
    * **adminSSHKey**: The contents of the `opsman.pub` public key file that you created above
    * **tenantID**: Your tenant ID, retrieved in the [Preparing to Deploy PCF on Azure](azure-prepare-env.html) topic
    * **clientID**: Your client or application ID, retrieved in the [Preparing to Deploy PCF on Azure](azure-prepare-env.html) topic
    * **clientSecret**: Your client secret, created in the [Preparing to Deploy PCF on Azure](azure-prepare-env.html) topic
    * **vmSize**: The size of the Ops Manager VM. Pivotal recommends using `Standard_DS2_v2`.
    * **adminUsername**: Username for the Ops Manager VM. Do not change the default value, `ubuntu`. Changing the default value can result in unexpected behaviors, including a failed Elastic Runtime installation and the inability to connect to the VM using SSH.
    * **location**: The location to install the Ops Manager VM. For example, `westus`.


## <a id='deploy'></a> Step 4: Deploy the ARM Template and Deployment Storage Accounts

1. Deploy the template:
    <pre class="terminal">
    $ az group deployment create --template-file azure-deploy.json \
    --parameters azure-deploy-parameters.json \
    --resource-group $RESOURCE_GROUP --name cfdeploy
    </pre>

1. When the command finishes, examine the output for the following values:
    * `opsMan-FQDN`
        <pre class="terminal">
          "opsMan-FQDN": {
            "type": "String",
            "value": "pcf-opsman-efecrvhdf7w7g.westus.cloudapp.azure.com"
          }
        </pre>
    * `extra Storage Account Prefix`
        <pre class="terminal">
        "extra Storage Account Prefix": {
          "type": "String",
          "value": "xtrastrgefecrvhdf7w7g"
          },
        </pre>

1. The template creates five new Premium deployment storage accounts. The names of the deployment storage accounts are the value of `extra Storage Account Prefix` appended with `1`, `2`, `3`, `4`, and `5`. In the example above, the names of the five deployment storage accounts are the following:
    * `xtrastrgefecrvhdf7w7g1`
    * `xtrastrgefecrvhdf7w7g2`
    * `xtrastrgefecrvhdf7w7g3`
    * `xtrastrgefecrvhdf7w7g4`
    * `xtrastrgefecrvhdf7w7g5`
    <br/><br/>
   <p class="note"><strong>Note:</strong> The five Premium storage accounts created by the template provide a reasonable amount of initial storage capacity. Pivotal recommends creating one Standard storage account for every 30 VMs, or one Premium storage account for every 150 VMs. You can increase the number of storage accounts later by provisioning more with the Azure CLI and following the naming sequence listed above.</p>
   <br/>
   For each of the five new deployment storage accounts, do the following:<br/>
        1. Retrieve the connection string for your storage account, replacing `YOUR-DEPLOYMENT-STORAGE-ACCOUNT-NAME` with the name of the storage account. For example, `xtrastrgefecrvhdf7w7g1`.
        <pre class="terminal">
        $ az storage account show-connection-string \
        --name YOUR-DEPLOYMENT-STORAGE-ACCOUNT-NAME --resource-group $RESOURCE_GROUP
        </pre>
        The command returns output similar to the following:
        <pre class="terminal">
        {
          "connectionString": "DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=xtrastrgefecrvhdf7w7g1;AccountKey=EXAMPLE0000tnkWLPxesFkAKLRO7oC7dlfujsW0PYV6vUhnJZSutCvVhla9u4xwtOV7liVZNAN6oJyoutO32fQ=="
        }
        </pre>
        1. Record the full value of `connectionstring` from the output above, starting with and including `DefaultEndpointsProtocol=`.
        1. Export the connection string, choosing a unique name for `CONNECTION_STRING_N`. For example, `CONNECTION_STRING_2`.
        <pre class="terminal">$ export CONNECTION\_STRING\_N="YOUR-CONNECTION-STRING"</pre>
        1. Create a container for BOSH:
        <pre class="terminal">$ az storage container create --name bosh \
        --connection-string $CONNECTION\_STRING\_N</pre>
        1. Create a container for the stemcell:
        <pre class="terminal">$ az storage container create --name stemcell \
        --connection-string $CONNECTION\_STRING\_N</pre>
        </pre>

1. Create a network security group named `pcf-nsg`.
    <pre class="terminal">
    $ az network nsg create --name pcf-nsg \
    --resource-group $RESOURCE_GROUP \
    --location $LOCATION
    </pre>

1. Add a network security group rule to the `pcf-nsg` group to allow traffic from the public Internet.
    <pre class="terminal">
    $ az network nsg rule create --name internet-to-lb \
    --nsg-name pcf-nsg --resource-group $RESOURCE_GROUP \
    --protocol Tcp --priority 100 \
    --destination-port-range '*'
    </pre>


## <a id='post-deploy'></a> Step 5: Complete Ops Manager Director Configuration

1. Navigate to your DNS provider, and create an entry that points a fully qualified domain name (FQDN) in your domain to the `opsMan-FQDN` you retrieved from the output of the template deployment above.

1. Continue to the [Configuring Ops Manager Director on Azure](azure-om-config.html) topic.
